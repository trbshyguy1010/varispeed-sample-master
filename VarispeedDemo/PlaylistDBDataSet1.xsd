<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PlaylistDBDataSet1" targetNamespace="http://tempuri.org/PlaylistDBDataSet1.xsd" xmlns:mstns="http://tempuri.org/PlaylistDBDataSet1.xsd" xmlns="http://tempuri.org/PlaylistDBDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PlaylistDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PlaylistDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.VarispeedDemo.Properties.Settings.GlobalReference.Default.PlaylistDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SimpleSongDatabaseTableAdapter" GeneratorDataComponentClassName="SimpleSongDatabaseTableAdapter" Name="SimpleSongDatabase" UserDataComponentName="SimpleSongDatabaseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PlaylistDBConnectionString (Settings)" DbObjectName="dbo.SimpleSongDatabase" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SimpleSongDatabase] WHERE (([SongID] = @Original_SongID) AND ([SongLength] = @Original_SongLength))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SongLength" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongLength" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SimpleSongDatabase] ([SongName], [SongLength]) VALUES (@SongName, @SongLength);
SELECT SongID, SongName, SongLength FROM SimpleSongDatabase WHERE (SongID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SongName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SongLength" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongLength" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SongID, SongName, SongLength FROM dbo.SimpleSongDatabase</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SimpleSongDatabase] SET [SongName] = @SongName, [SongLength] = @SongLength WHERE (([SongID] = @Original_SongID) AND ([SongLength] = @Original_SongLength));
SELECT SongID, SongName, SongLength FROM SimpleSongDatabase WHERE (SongID = @SongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SongName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SongLength" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongLength" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SongLength" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongLength" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SongID" ColumnName="SongID" DataSourceName="[D:\DWS\VARISPEED-SAMPLE-MASTER\VARISPEED-SAMPLE-MASTER\VARISPEEDDEMO\SONG LIST\PLAYLISTDB.MDF].dbo.SimpleSongDatabase" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
              <Mapping SourceColumn="SongName" DataSetColumn="SongName" />
              <Mapping SourceColumn="SongLength" DataSetColumn="SongLength" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PlaylistDBDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="PlaylistDBDataSet1" msprop:Generator_DataSetName="PlaylistDBDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="SimpleSongDatabase" msprop:Generator_RowEvHandlerName="SimpleSongDatabaseRowChangeEventHandler" msprop:Generator_RowDeletedName="SimpleSongDatabaseRowDeleted" msprop:Generator_RowDeletingName="SimpleSongDatabaseRowDeleting" msprop:Generator_RowEvArgName="SimpleSongDatabaseRowChangeEvent" msprop:Generator_TablePropName="SimpleSongDatabase" msprop:Generator_RowChangedName="SimpleSongDatabaseRowChanged" msprop:Generator_RowChangingName="SimpleSongDatabaseRowChanging" msprop:Generator_TableClassName="SimpleSongDatabaseDataTable" msprop:Generator_RowClassName="SimpleSongDatabaseRow" msprop:Generator_TableVarName="tableSimpleSongDatabase" msprop:Generator_UserTableName="SimpleSongDatabase">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SongID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" msprop:Generator_ColumnVarNameInTable="columnSongID" msprop:Generator_UserColumnName="SongID" type="xs:int" />
              <xs:element name="SongName" msprop:Generator_ColumnPropNameInRow="SongName" msprop:Generator_ColumnPropNameInTable="SongNameColumn" msprop:Generator_ColumnVarNameInTable="columnSongName" msprop:Generator_UserColumnName="SongName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SongLength" msprop:Generator_ColumnPropNameInRow="SongLength" msprop:Generator_ColumnPropNameInTable="SongLengthColumn" msprop:Generator_ColumnVarNameInTable="columnSongLength" msprop:Generator_UserColumnName="SongLength">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SimpleSongDatabase" />
      <xs:field xpath="mstns:SongID" />
    </xs:unique>
  </xs:element>
</xs:schema>